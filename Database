
from os import getenv
from typing import Dict, Iterable, Iterator
from certifi import where
from dotenv import load_dotenv
from MonsterLab import Monster
from pandas import DataFrame
from pymongo import MongoClient


class Database:
    def __init__(self):
        load_dotenv()
        self.database = MongoClient(getenv('DB_URL'), tlsCAFile=where())["Collection"]
        self.collection = self.database.get_collection('Monsters')

    def seed(self, amount=1000):
        monsters = []
        for _ in range(amount):
            monsters.append(Monster().to_dict())
        self.collection.insert_many(monsters)
        return f"{amount} Monsters created"

    def reset(self):
        self.collection.delete_many({})
        self.collection.seed()
        return "Monsters Reset"

    def count(self) -> str:
        number_of_monsters = self.collection.count_documents({})
        return f"You have {number_of_monsters} Monsters"

    def dataframe(self) -> DataFrame:
        return DataFrame(self.collection.find({}, {"_id":False}))

    def html_table(self) -> str:
        return self.dataframe().to_html(index=False)


# if __name__ == '__main__':
#     db = Database()
#     if db is not None:
#         db.reset()
#         print(db.count())
#     else:
#         db.seed()
#         print(db.count())

